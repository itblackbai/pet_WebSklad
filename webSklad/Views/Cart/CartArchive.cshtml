@model List<IGrouping<int, webSklad.Models.Cart>>

<div class="invoice-info">
    <title>Check archive</title>

    <body>
        <div class="d-flex justify-content-center">
            <h4 class="mb-3 mt-3">Check archive</h4>
        </div>

        <div class="d-flex justify-content-end mb-4">
            <div class="input-group">
                <span class="input-group-text"><i class="bi bi-search"></i></span>
                <span class="input-group-text"><i class="bi bi-list-ol"></i></span>
                <input type="text" id="invoiceFilter" class="form-control" placeholder="" />
                <span class="input-group-text"><i class="bi bi-calendar"></i></span>
                <input type="date" id="startDate" class="form-control">
                <div hidden>

                    <span class="input-group-text"><i class="bi bi-buildings"></i></span>
                    <input type="text" id="shoppostinfonameFilter" class="form-control" placeholder="" />
                    <span class="input-group-text"><i class="bi bi-person-square"></i></span>
                    <input type="text" id="fopnameFilter" class="form-control" placeholder="" />
                    <span class="input-group-text"><i class="bi bi-receipt"></i></span>
                    <input type="text" id="fopaccountFilter" class="form-control" placeholder="" />

                    <select id="paymentStatusFilter" class="form-select">
                        <option value="">All</option>
                        <option value="1">Paid</option>
                        <option value="0">Unpaid</option>
                    </select>
                </div>

            </div>
        </div>


        @if (Model != null && Model.Count > 0)
        {
            <table class="table">
                <thead>
                    <tr>
                        <th class="th-sm" style="width: 1%"></th>
                        <th class="th-sm" style="width: 10%"># check</th>
                        <th class="th-sm" style="width: 72%">Data & time</th>
                        <th class="th-sm" style="width: 1%"></th>
                        <th class="th-sm" style="width: 1%"></th>
                        <th class="th-sm" style="width: 1%"></th>
                        <th class="th-sm" style="width: 2%"></th>
                        <th class="th-sm" style="width: 2%" data-sort="false"></th>
                        <th class="th-sm" style="width: 2%" data-sort="false"></th>
                        <th class="th-sm" style="width: 2%" data-sort="false"></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var group in Model.OrderByDescending(group => group.FirstOrDefault()?.CartRegister?.CartRegisterDateTime).Take(15))
                    {
                        var cartId = group.Key;
                        var invoice = group.FirstOrDefault()?.CartRegister;
                        var totalAmount = group.Sum(c => c.SubTotalCart);

                        <tr class="invoiceRow">
                            <td>
                                <button class="showProductsButton"><i class="bi bi-menu-down"></i></button>
                            </td>
                            <td>@(invoice?.Id)</td>
                            <td>@(invoice?.CartRegisterDateTime)</td>
                           
                        </tr>

                        <tr class="productTableContainer" style="display: none;" data-invoice-name="@(invoice?.Carts)">

                            <td colspan="6">
                                <h3>Product in check</h3>

                                <table class="table">
                                    <thead>
                                        <tr>
                                            <th class="th-sm" style="width: 1%"></th>
                                            <th class="th-sm" style="width: 10%">Code</th>
                                            <th class="th-sm" style="width: 69%">Product name</th>
                                            <th class="th-sm" style="width: 1%"></th>
                                            <th class="th-sm" style="width: 10%">Amount</th>
                                            <th class="th-sm" style="width: 10%">Price</th>
                                            <th class="th-sm" style="width: 10%">Total</th>

                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var cart in group)
                                        {
                                            <tr class="productRow">
                                                <td></td>
                                                <td>@cart.Product.Sku</td>
                                                <td>@cart.Product.ProductName</td>
                                                <td></td>
                                                <td>@cart.Quantity</td>
                                                <td>@cart.Price</td>
                                                <td>@cart.SubTotalCart</td>
                                            </tr>


                                        }
                                        <p><strong>Total :  @totalAmount .грн</strong></p>
                                    </tbody>
                                </table>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        }
        else
        {
           
        }

    </body>

</div>



<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $(document).ready(function () {





        function convertDateToCorrectFormat(dateString) {
            const [day, month, year] = dateString.split('.');
            return `${year}-${month}-${day}`;
        }
        function savePaymentStatus(invoiceId, isPayment) {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("SavePaymentStatus", "Cart")',
                data: { invoiceId: invoiceId, isPayment: isPayment },
                success: function (data) {
                    console.log('Payment status saved successfully.');
                },
                error: function (xhr, status, error) {
                    console.error('Failed to save payment status.');
                }
            });
        }

        $('input[type="checkbox"]').on('click', function () {
            var isChecked = $(this).prop('checked');
            var invoiceId = $(this).data('invoice-id');

            savePaymentStatus(invoiceId, isChecked);
        });
        function deleteCart(cartId) {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("DeleteCart", "Cart")',
                data: { cartId: cartId },
                success: function (data) {
                    window.location.reload();
                },
                error: function (xhr, status, error) {
                    console.error('Failed to delete the cart.');
                }
            });
        }

        $('.deleteCartButton').on('click', function () {
            var cartId = $(this).data('cart-id');
            if (confirm("Are you sure you want to delete this cart?")) {
                deleteCart(cartId);
            }
        });




        function deleteProductFromInvoice(cartId) {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("DeleteProductFromInvoice", "Cart")',
                data: { cartId: cartId },
                success: function (data) {
                    window.location.reload();
                },
                error: function (xhr, status, error) {
                    console.error('Failed to delete the product from invoice.');
                }
            });
        }

        $('.deleteProductFromInvoiceButton').on('click', function () {
            var cartId = $(this).data('cart-id');
            if (confirm("Are you sure you want to delete this product?")) {
                deleteProductFromInvoice(cartId);
            }
        });





        function editInvoice(invoiceId) {

            window.location.href = '@Url.Action("EditInvoice", "Product")' + '?invoiceId=' + invoiceId;
        }


        $('.editInvoiceButton').on('click', function () {
            var invoiceId = $(this).data('invoice-id');
            editInvoice(invoiceId);
        });


        function applyFilters() {
            var invoiceValue = $("#invoiceFilter").val().toLowerCase();
            var shopPostInfoNameValue = $("#shoppostinfonameFilter").val().toLowerCase();
            var fopNameValue = $("#fopnameFilter").val().toLowerCase();
            var fopAccountValue = $("#fopaccountFilter").val().toLowerCase();

            var paymentStatusValue = $("#paymentStatusFilter").val();

            var startDateValue = $("#startDate").val();
            var endDateValue = $("#endDate").val();

            var startDate = startDateValue ? new Date(convertDateToCorrectFormat(startDateValue)) : null;
            var endDate = endDateValue ? new Date(convertDateToCorrectFormat(endDateValue)) : null;

            $(".table tbody .invoiceRow").filter(function () {
                var invoiceName = $(this).find("td:nth-child(2)").text().toLowerCase();
                var creationDateString = $(this).find("td:nth-child(3)").text();
                var creationDate = new Date(creationDateString.replace(/(\d{2}).(\d{2}).(\d{4})/, "$2/$1/$3"));

                var hasInvoice = invoiceName.includes(invoiceValue);
                var hasShopPostInfoName = $(this).find("td:nth-child(4)").text().toLowerCase().includes(shopPostInfoNameValue);
                var hasFopName = $(this).find("td:nth-child(5)").text().toLowerCase().includes(fopNameValue);
                var hasFopAccount = $(this).find("td:nth-child(6)").text().toLowerCase().includes(fopAccountValue);


                var isPayment = $(this).find("input[type='checkbox']").prop('checked');
                var hasPaymentStatus = paymentStatusValue === '' || (paymentStatusValue === '1' && isPayment) || (paymentStatusValue === '0' && !isPayment);

                var hasStartDate = !startDate || (creationDate >= startDate && creationDate <= new Date(startDateValue + " 23:59:59"));
                var hasEndDate = !endDate || (creationDate <= endDate && creationDate >= new Date(endDateValue + " 00:00:00"));

                $(this).toggle(hasInvoice && hasShopPostInfoName && hasFopName && hasFopAccount && hasPaymentStatus && hasStartDate && hasEndDate);

                var parentInvoiceName = invoiceName;
                $(this).next(".productTableContainer").find(".productRow").each(function () {
                    var productCreationDateString = $(this).find("td:nth-child(3)").text();
                    var productCreationDate = new Date(productCreationDateString.replace(/(\d{2}).(\d{2}).(\d{4})/, "$2/$1/$3"));

                    var showProduct = parentInvoiceName.includes(invoiceValue) &&
                        parentInvoiceName.includes(shopPostInfoNameValue) &&
                        parentInvoiceName.includes(fopNameValue) &&
                        parentInvoiceName.includes(fopAccountValue);

                    var hasStartDate = !startDate || (productCreationDate >= startDate && productCreationDate <= new Date(startDateValue + " 23:59:59"));
                    var hasEndDate = !endDate || (productCreationDate <= endDate && productCreationDate >= new Date(endDateValue + " 00:00:00"));

                    $(this).toggle(showProduct && hasStartDate && hasEndDate);
                });
            });
        }






        $(".showProductsButton").click(function () {
            $(this).closest("tr").next(".productTableContainer").toggle();
        });

        $("#invoiceFilter, #shoppostinfonameFilter, #fopnameFilter, #fopaccountFilter").on("keyup", function () {
            applyFilters();
        });
        $("#startDate, #endDate").on("change", function () {
            applyFilters();
        });
        $("#paymentStatusFilter").on("change", function () {
            applyFilters();
        });
        applyFilters();

    });
</script>